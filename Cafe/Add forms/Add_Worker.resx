<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        KNaFAAAAAElFTkSuQmCC
</value>
  </data>
</root>